apiVersion: v1
data:
  cacert: 
  clouds.yaml: REDACTED
kind: Secret
metadata:
  labels:
    clusterctl.cluster.x-k8s.io/move: "true"
  name: bsc-gaia-cloud-config
  namespace: default
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: bsc-gaia-md-0
  namespace: default
spec:
  template:
    spec:
      files: []
      preKubeadmCommands: [
	"apt-get update;", "apt-get install nfs-common -y;", 
	"mkdir -p /mnt/nfs/shared", 
	"echo 192.168.0.15:/mnt/nfs/shared    /mnt/nfs/shared    nfs    defaults    0 0 >> /etc/fstab"]
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            cloud-provider: external
            provider-id: openstack:///'{{ instance_id }}'
          name: '{{ local_hostname }}'
      postKubeadmCommands: ["sudo mount -a"]
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: bsc-gaia
  namespace: default
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
    serviceDomain: cluster.local
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: bsc-gaia-control-plane
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: OpenStackCluster
    name: bsc-gaia
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: bsc-gaia-md-0
  namespace: default
spec:
  clusterName: bsc-gaia
  replicas: 3
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: bsc-gaia-md-0
      clusterName: bsc-gaia
      failureDomain: nova
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: OpenStackMachineTemplate
        name: bsc-gaia-md-0
      version: 1.30.2
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: bsc-gaia-control-plane
  namespace: default
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
      controllerManager:
        extraArgs:
          cloud-provider: external
    files: []
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ instance_id }}'
        name: '{{ local_hostname }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          cloud-provider: external
          provider-id: openstack:///'{{ instance_id }}'
        name: '{{ local_hostname }}'
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: OpenStackMachineTemplate
      name: bsc-gaia-control-plane
  replicas: 1
  version: 1.30.2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackCluster
metadata:
  name: bsc-gaia
  namespace: default
spec:
  apiServerLoadBalancer:
    enabled: false
  externalNetwork:
    id: fbba2c3c-7fdf-4bdc-8a02-6d852446c79a
  identityRef:
    cloudName: bsc
    name: bsc-gaia-cloud-config
  managedSecurityGroups:
    allNodesSecurityGroupRules:
    - description: Created by cluster-api-provider-openstack - BGP (calico)
      direction: ingress
      etherType: IPv4
      name: BGP (Calico)
      portRangeMax: 179
      portRangeMin: 179
      protocol: tcp
      remoteManagedGroups:
      - controlplane
      - worker
    - description: Created by cluster-api-provider-openstack - IP-in-IP (calico)
      direction: ingress
      etherType: IPv4
      name: IP-in-IP (calico)
      protocol: "4"
      remoteManagedGroups:
      - controlplane
      - worker
  managedSubnets:
  - cidr: 10.6.0.0/24
    dnsNameservers:
    - 84.88.52.35
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackMachineTemplate
metadata:
  name: bsc-gaia-control-plane
  namespace: default
spec:
  template:
    spec:
      ports:
        - network:
            filter:
               name: k8s-clusterapi-cluster-default-bsc-gaia
        - network:
            filter:
               name: net-BSC24Spacious
      flavor: bsc.mem.m
      image:
        filter:
          name: Ubuntu-kube-1.30.2
      sshKeyName: malcolm_bsc_capi_test
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: OpenStackMachineTemplate
metadata:
  name: bsc-gaia-md-0
  namespace: default
spec:
  template:
    spec:
      ports:
        - network:
            filter:
               name: k8s-clusterapi-cluster-default-bsc-gaia
        - network:
            filter:
               name: net-BSC24Spacious
      flavor: bsc.mem.2xl
      image:
        filter:
          name: Ubuntu-kube-1.30.2
      sshKeyName: malcolm_bsc_capi_test
